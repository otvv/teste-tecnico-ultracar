// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ultracar.Context;

#nullable disable

namespace Ultracar.Migrations
{
    [DbContext(typeof(UltracarDbContext))]
    partial class UltracarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ultracar.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EstoquePeca")
                        .HasColumnType("integer");

                    b.Property<string>("NomePeca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoMovimentacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("Ultracar.Models.Orcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeracaoOrcamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlacaVeiculo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("Ultracar.Models.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EstoqueId")
                        .HasColumnType("integer");

                    b.Property<string>("NomePeca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("Ultracar.Models.Peca", b =>
                {
                    b.HasOne("Ultracar.Models.Estoque", "Estoque")
                        .WithMany()
                        .HasForeignKey("EstoqueId");

                    b.HasOne("Ultracar.Models.Orcamento", "Orcamento")
                        .WithMany("Pecas")
                        .HasForeignKey("OrcamentoId");

                    b.Navigation("Estoque");

                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("Ultracar.Models.Orcamento", b =>
                {
                    b.Navigation("Pecas");
                });
#pragma warning restore 612, 618
        }
    }
}
